package br.com.impacta.teste;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;


import java.util.Random;

import br.com.impacta.modelos.Conta;
import br.com.impacta.modelos.ContaPoupanca;

public class TestaOrdenacao {

	public static void main(String[] args) {
		
		Random ram = new Random();
		ContaPoupanca c1;
		List<ContaPoupanca> contas = new ArrayList<ContaPoupanca>();
		
		List<ContaPoupanca> contaLinked = new LinkedList<>();
		
		
		for (int i = 1; i < 20; i++) {
			
			c1 = new ContaPoupanca(ram.nextInt(1000)* i,"Sebastiao " + i,i * 1000.0, i * 1000. * 2 );
			
			//arraylist 
			contas.add(c1);

			//Linked list
			contaLinked.add(c1);
		}
		
		Collections.sort(contas);
		
		System.out.println("Array List");
		for (ContaPoupanca contaPoupanca : contas) {
			
			System.out.println(String.format("Numero da conta %d", contaPoupanca.getNumero()));
		}		
		
		
		Collections.sort(contaLinked);
		
		System.out.println("\n\nLinked List");
		for (ContaPoupanca contaPoupanca : contaLinked) {
			
			System.out.println(String.format("Numero da conta %d", contaPoupanca.getNumero()));
		}	
		
		Collections.shuffle(contas);
		
		
		System.out.println("\n\n Contas);
		for (ContaPoupanca contaPoupanca : contaLinked) {
			
			System.out.println(String.format("Numero da conta %d", contaPoupanca.getNumero()));
		}
		
		
		
		Collections.shuffle(contaLinked);
		
		
	}
	
}

    // 4

//Apesar de ter o metodo que efetua uma comparação na classe ContaPoupanca
//o metodo sort do Collections nescessita que a nossa classe implente o interface Comparable.



//6 basta trocarmos a lógica do método compareTo() na classe ContaPoupanca.

//@Override
//public int compareTo(ContaPoupanca conta) {
//	
//	if(this.getNumero() < conta.getNumero())
//	{
//		return -1;
//	}
//	
//	if(this.getNumero() > conta.getNumero()){
//		return 1;
//	}
//	
//	return 0;
//	
//}














